{"ast":null,"code":"import{getGuessStatuses}from'./statuses';import{solutionIndex}from'./words';import{GAME_TITLE}from'../constants/strings';import{getStoredIsHighContrastMode}from'./localStorage';export var shareStatus=function shareStatus(guesses,lost,isHardMode){navigator.clipboard.writeText(\"\".concat(GAME_TITLE,\" \").concat(solutionIndex,\" \").concat(lost?'X':guesses.length,\"/6\").concat(isHardMode?'*':'',\"\\n\\n\")+generateEmojiGrid(guesses));};export var generateEmojiGrid=function generateEmojiGrid(guesses){return guesses.map(function(guess){var status=getGuessStatuses(guess);var isHighContrast=getStoredIsHighContrastMode();return guess.split('').map(function(_,i){switch(status[i]){case'correct':if(isHighContrast){return'ðŸŸ§';}return'ðŸŸ©';case'present':if(isHighContrast){return'ðŸŸ¦';}return'ðŸŸ¨';default:if(localStorage.getItem('theme')==='dark'){return'â¬›';}return'â¬œ';}}).join('');}).join('\\n');};","map":{"version":3,"sources":["/Users/hovanes.gasparian/Library/CloudStorage/OneDrive-Vizio/GitHub/barel/src/lib/share.ts"],"names":["getGuessStatuses","solutionIndex","GAME_TITLE","getStoredIsHighContrastMode","shareStatus","guesses","lost","isHardMode","navigator","clipboard","writeText","length","generateEmojiGrid","map","guess","status","isHighContrast","split","_","i","localStorage","getItem","join"],"mappings":"AAAA,OAASA,gBAAT,KAAiC,YAAjC,CACA,OAASC,aAAT,KAA8B,SAA9B,CACA,OAASC,UAAT,KAA2B,sBAA3B,CACA,OAASC,2BAAT,KAA4C,gBAA5C,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CACzBC,OADyB,CAEzBC,IAFyB,CAGzBC,UAHyB,CAItB,CACHC,SAAS,CAACC,SAAV,CAAoBC,SAApB,CACE,UAAGR,UAAH,aAAiBD,aAAjB,aAAkCK,IAAI,CAAG,GAAH,CAASD,OAAO,CAACM,MAAvD,cACEJ,UAAU,CAAG,GAAH,CAAS,EADrB,SAESK,iBAAiB,CAACP,OAAD,CAH5B,EAKD,CAVM,CAYP,MAAO,IAAMO,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACP,OAAD,CAAuB,CACtD,MAAOA,CAAAA,OAAO,CACXQ,GADI,CACA,SAACC,KAAD,CAAW,CACd,GAAMC,CAAAA,MAAM,CAAGf,gBAAgB,CAACc,KAAD,CAA/B,CACA,GAAME,CAAAA,cAAc,CAAGb,2BAA2B,EAAlD,CACA,MAAOW,CAAAA,KAAK,CACTG,KADI,CACE,EADF,EAEJJ,GAFI,CAEA,SAACK,CAAD,CAAIC,CAAJ,CAAU,CACb,OAAQJ,MAAM,CAACI,CAAD,CAAd,EACE,IAAK,SAAL,CACE,GAAIH,cAAJ,CAAoB,CAClB,MAAO,IAAP,CACD,CACD,MAAO,IAAP,CACF,IAAK,SAAL,CACE,GAAIA,cAAJ,CAAoB,CAClB,MAAO,IAAP,CACD,CACD,MAAO,IAAP,CACF,QACE,GAAII,YAAY,CAACC,OAAb,CAAqB,OAArB,IAAkC,MAAtC,CAA8C,CAC5C,MAAO,GAAP,CACD,CACD,MAAO,GAAP,CAfJ,CAiBD,CApBI,EAqBJC,IArBI,CAqBC,EArBD,CAAP,CAsBD,CA1BI,EA2BJA,IA3BI,CA2BC,IA3BD,CAAP,CA4BD,CA7BM","sourcesContent":["import { getGuessStatuses } from './statuses'\nimport { solutionIndex } from './words'\nimport { GAME_TITLE } from '../constants/strings'\nimport { getStoredIsHighContrastMode } from './localStorage'\n\nexport const shareStatus = (\n  guesses: string[],\n  lost: boolean,\n  isHardMode: boolean\n) => {\n  navigator.clipboard.writeText(\n    `${GAME_TITLE} ${solutionIndex} ${lost ? 'X' : guesses.length}/6${\n      isHardMode ? '*' : ''\n    }\\n\\n` + generateEmojiGrid(guesses)\n  )\n}\n\nexport const generateEmojiGrid = (guesses: string[]) => {\n  return guesses\n    .map((guess) => {\n      const status = getGuessStatuses(guess)\n      const isHighContrast = getStoredIsHighContrastMode()\n      return guess\n        .split('')\n        .map((_, i) => {\n          switch (status[i]) {\n            case 'correct':\n              if (isHighContrast) {\n                return 'ðŸŸ§'\n              }\n              return 'ðŸŸ©'\n            case 'present':\n              if (isHighContrast) {\n                return 'ðŸŸ¦'\n              }\n              return 'ðŸŸ¨'\n            default:\n              if (localStorage.getItem('theme') === 'dark') {\n                return 'â¬›'\n              }\n              return 'â¬œ'\n          }\n        })\n        .join('')\n    })\n    .join('\\n')\n}\n"]},"metadata":{},"sourceType":"module"}